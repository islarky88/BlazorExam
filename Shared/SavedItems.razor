@using BlazorExam.Data
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Components.Web

@inject IJSRuntime JsRuntime

<h3>Saved Items from: @Source</h3>

<table class="table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (C)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var Item in ApiData)
        {
            <tr class="pointer" @onclick="@(e => DeleteItem(Item))">
                <td>@Item.Id</td>
                <td>@Item.Title</td>
                <td>@Item.UserId</td>
            </tr>
        }
    </tbody>
</table>

@code {

  List<JsonData> ApiData = new List<JsonData>();

  [Parameter] public string Source { get; set; }

  private async Task DeleteItem(JsonData Item)
  {

    try
    {
      var ApiType = ApiService.MyApiUrls.First(Item => Item.url == Source).name;
      Console.WriteLine("asdasd {0}", ApiType);
      await JsRuntime.InvokeVoidAsync("DeleteSavedItems", ApiType, Item);

    }
    catch (Exception exception)
    {
      Console.WriteLine("Exception Hit------------");
      Console.WriteLine(exception);
    }

  }
  private async Task FetchSavedData(string Type) 
  {

    try
    {
      var Response = await JsRuntime.InvokeAsync<string>("FetchSavedItems", Type);

      Console.WriteLine(Response);

      ApiData = JsonConvert.DeserializeObject<List<JsonData>>(Response);

      Console.WriteLine(ApiData);

      Console.WriteLine("hello from list mounted");
      StateHasChanged();
    }
    catch (Exception exception)
    {
      Console.WriteLine("Exception Hit------------");
      Console.WriteLine(exception);
    }
      
  } 

  protected override async Task OnAfterRenderAsync(bool FirstRender)
  {
    try
    {
      if (FirstRender)
      {
        await FetchSavedData("Albums");
      }
        
    }
    catch (Exception exception)
    {
      Console.WriteLine("Exception Hit------------");
      Console.WriteLine(exception);
    }

  }
}    