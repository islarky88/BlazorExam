@using BlazorExam.Data
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Components.Web

@inject IJSRuntime JsRuntime

<h3>Saved Items from: @Source</h3>


<h5 class="mt-3 mb-3">Click on an item to remove it from from local storage</h5>

@if (ApiData.Count > 0) {
<table class="table">
  <thead>
    <tr>
    @foreach(var Item in ApiData.First().Keys)
    {
      <th>@Item</th>
    }
    </tr>
  </thead>
  <tbody>
    @foreach (var Item in ApiData)
    {
      <tr class="pointer" @onclick="@(e => DeleteItem(Item))">

        @foreach(var Val in Item.Values)
        {
          <td>@Val</td>
        }
      </tr>
    }
  </tbody>
</table>
} else {
  <div class="jumbotron jumbotron-fluid">
    <div class="container">
      <h1 class="display-4">No Items Saved</h1>
    </div>
  </div>
}


@code {

  [Parameter] public string Source { get; set; }

  List<Dictionary<string, string>> ApiData = new List<Dictionary<string, string>>();

  List<ApiUrls> MyApiUrls = ApiService.MyApiUrls;

  private async Task DeleteItem(Dictionary<string, string> Item)
  {

    try
    {
      await JsRuntime.InvokeVoidAsync("DeleteSavedItem", Source, Item);

      await FetchSavedData(Source);

    }
    catch (Exception exception)
    {
      Console.WriteLine("Exception Hit------------");
      Console.WriteLine(exception);
    }

  }
  private async Task FetchSavedData(string Type) 
  {

    try
    {
      var Response = await JsRuntime.InvokeAsync<string>("FetchSavedItems", Type);

      @* Console.WriteLine(Response); *@

      @* ApiData = JsonConvert.DeserializeObject<List<JsonData>>(Response); *@

      ApiData = JsonConvert.DeserializeObject<List<Dictionary<string, string>>>(Response);
      
      StateHasChanged();

    }
    catch (Exception exception)
    {
      Console.WriteLine("Exception Hit------------");
      Console.WriteLine(exception);
    }
      
  } 

  protected override async Task OnAfterRenderAsync(bool FirstRender)
  {
    try
    {
      if (FirstRender)
      {
        // initial load for loading data from localstorage
        await FetchSavedData(Source);
      }
        
    }
    catch (Exception exception)
    {
      Console.WriteLine("Exception Hit------------");
      Console.WriteLine(exception);
    }

  }
}    